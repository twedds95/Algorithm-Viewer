import React from "react";
import "./rocketArea.css"
import Rocket from "./Rocket";

// TODOS:
// - make user variable NUMBER_OF_ROCKETS - MUTATION_ODDS - MAX_SPEED - MASS - GRAVITY

const HEIGHT = 500;
const WIDTH = window.innerWidth * 0.9;
export const ROCKET_DIM = 40;
const LAUNCH_POS_X = WIDTH / 5;

const NUMBER_OF_OBSTACLES = Math.ceil(WIDTH / 250);
const NUMBER_OF_ROCKETS = 50;

const SPEED = 500;
const NUMBER_OF_FRAMES = 5000;

export default class SmartRockets extends React.Component {
    constructor(props) {
        super(props);
        let rockets = [];
        for (let i = 0; i < NUMBER_OF_ROCKETS; i++) {
            let rocket = new Rocket(LAUNCH_POS_X, HEIGHT - ROCKET_DIM);
            rocket.randomizeGenes(NUMBER_OF_FRAMES);
            rockets.push(rocket);
        }
        this.state = {
            population: { generation: 0, rockets: rockets },
            allStopped: false,
            obstacles: this.randomizeObstacles(),
            finish: { x: WIDTH, y: HEIGHT / 2, radius: 100 }
        };

        this.launchRockets = this.launchRockets.bind(this);
    }

    componentDidMount() {
    }

    renderStuff() {
        const stuff = [];
        let obs = this.state.obstacles;
        for (let i = 0; i < obs.length; i++) {
            stuff.push(this.renderObstacle(obs[i]));
        }
        let rockets = this.state.population.rockets;
        for (let i = 0; i < rockets.length; i++) {
            stuff.push(this.renderRockets(rockets[i]));
        }
        return stuff;
    }

    render() {
        return (
            <div>
                <h1>Generation Smart Rockets</h1>
                <label>Generation: {this.state.population.generation}</label>
                <button onClick={() => this.reset()}>Reset Rockets</button>
                <button onClick={() => this.launchRockets()}>Launch Rockets</button>
                <div>
                    <svg className="rocketArea">
                        {this.renderStuff()}
                        {this.renderLanding()}
                        
                    </svg>
                </div>

            </div>
        );
    }

    reset() {
        window.location.reload(true);
    }

    getCurrentGeneration() {
        let bounds = { left: 0, right: WIDTH, top: 0, bottom: HEIGHT, finish: this.state.finish };
        let rockets = this.state.population.rockets;
        let isStopped = true;
        for (let i = 0; i < rockets.length; i++) {
            isStopped = rockets[i].updatePosition(this.state.obstacles, bounds) && isStopped;
        }
        let newPopulation = { generation: this.state.population.generation, rockets: rockets };
        return ({ population: newPopulation, allStopped: isStopped });
    }


    launchRockets() {
        for (let i = 0; i < NUMBER_OF_FRAMES; i++) {
            const running = setInterval(() => {
                this.setState(this.getCurrentGeneration());
                if (this.state.allStopped) {
                    clearInterval(running);
                    this.updateGeneration();
                }
            }, i * SPEED);
        }
    }

    updateGeneration() {
        let matingPool = [];
        let maxStrength = 0;
        for (let i = 0; i < this.state.population.rockets.length; i++) {
            this.state.population.rockets[i].calculateStrengths(this.state.finish);
            maxStrength = Math.max(this.state.population.rockets[i].strength, maxStrength);
        }
        for (let i = 0; i < this.state.population.rockets.length; i++) {
            let r = this.state.population.rockets[i];
            let s = NUMBER_OF_ROCKETS * r.strength / maxStrength;
            for (let j = 0; j < s; j++) {
                matingPool.push(r);
            }
        }
        let newRockets = [];
        for (let i = 0; i < NUMBER_OF_ROCKETS && matingPool.length > 0; i++) {
            let parents = [Math.floor(Math.random() * matingPool.length), Math.floor(Math.random() * matingPool.length)];
            newRockets.push(matingPool[parents[0]].makeChild(matingPool[parents[1]]));
        }
        this.setState({ population: { generation: this.state.population.generation + 1, rockets: newRockets }, allStopped: false });
        this.launchRockets();
    }

    randomizeObstacles() {
        const obs = [];
        for (let i = 0; i < NUMBER_OF_OBSTACLES; i++) {
            let startX = (WIDTH * 0.2);
            let endX = (WIDTH * 0.8);
            let x = startX + (endX - startX) / NUMBER_OF_OBSTACLES * (i + 0.5);
            let y = randomNumber((HEIGHT * 0.9), (HEIGHT * 0.1));
            if (Math.abs(x - LAUNCH_POS_X) < ROCKET_DIM) y = randomNumber((HEIGHT * 0.8 - 2 * ROCKET_DIM), (HEIGHT * 0.1)); // Don't want obstacles close to rockets launching
            let radius = randomNumber((WIDTH * 0.04), (WIDTH * 0.01));
            let colour = randomAsteroidColour();
            let rotation = randomNumber(360);
            obs.push({ x, y, radius, colour, rotation });
        }
        return obs;
    }

    renderObstacle(obstacle) {
        return (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 511.999 511.999"
                width={obstacle.radius * 2} height={obstacle.radius * 2}
                x={obstacle.x - obstacle.radius} y={obstacle.y - obstacle.radius}>
                <path fill={obstacle.colour}
                    d="M496.129 209.771c-4.238-20.552-4.892-41.59-2.602-62.45.195-1.775.295-3.586.295-5.424 0-11.581-3.984-22.057-10.416-29.617-11.896-13.979-22.412-29.019-31.534-44.948-13.746-24.007-40.23-40.265-70.654-40.265-2.286 0-4.55.092-6.787.274-18.686 1.514-37.438-1.032-55.417-6.344-21.71-6.415-44.298-9.849-67.129-9.849-129.451 0-242.278 114.705-240.74 247.726a246.562 246.562 0 0 0 2.661 33.448c3.682 24.75 2.806 49.928-1.594 74.561-2.91 16.288.833 35.298 11.709 52.214 6.862 10.671 15.66 19.1 25.244 24.901 11.575 7.007 21.965 15.757 30.606 26.169 11.998 14.457 31.079 31.818 51.326 30.529a77.902 77.902 0 0 0 11.446-1.581c24.369-5.246 49.563-5.367 74.171-1.397a246.114 246.114 0 0 0 35.913 3.114c134.601 1.819 246.108-106.334 248.211-240.931a229.804 229.804 0 0 0-4.709-50.13z" />
                <ellipse transform-origin="center" transform={"rotate(" + obstacle.rotation + ")"} fill="#afafaf" cx="91.827" cy="306.458" rx="36.174" ry="50.477" />
                <ellipse transform-origin="center" transform={"rotate(" + obstacle.rotation + ")"} fill="#afafaf" cx="136.716" cy="406.621" rx="30.242" ry="21.148" />
                <ellipse transform-origin="center" transform={"rotate(" + obstacle.rotation + ")"} fill="#afafaf" cx="422.959" cy="255.981" rx="33.392" ry="44.522" />
                <path
                    transform-origin="center" transform={"rotate(" + obstacle.rotation + ")"}
                    d="M255.999 44.569c-57.802 0-111.774 22.882-151.974 64.431-4.275 4.418-4.158 11.464.259 15.739a11.09 11.09 0 0 0 7.738 3.131c2.91 0 5.817-1.134 8.001-3.39 35.969-37.176 84.26-57.649 135.976-57.649 6.146 0 11.131-4.983 11.131-11.131s-4.983-11.131-11.131-11.131zM83.255 153.925a11.08 11.08 0 0 0 6.185 1.884c3.588 0 7.11-1.732 9.257-4.938l.228-.341c3.42-5.107 2.055-12.021-3.053-15.442-5.106-3.42-12.019-2.055-15.442 3.053l-.228.341c-3.42 5.108-2.055 12.022 3.053 15.443z" />
                <path
                    d="M507.03 207.523c-3.861-18.718-4.681-38.564-2.439-58.989.24-2.192.362-4.424.362-6.637 0-13.845-4.641-26.926-13.071-36.831-11.314-13.296-21.525-27.852-30.351-43.266-16.198-28.29-46.972-45.864-80.312-45.864-2.56 0-5.145.105-7.686.309-16.303 1.321-33.589-.672-51.363-5.925C299.027 3.483 275.381.015 251.886.015c-32.875 0-65.231 6.933-96.17 20.608C126 33.757 99.068 52.417 75.671 76.089c-23.862 24.14-42.594 52.004-55.674 82.819C6.342 191.078-.381 224.753.017 259.003a258.78 258.78 0 0 0 2.782 34.956c3.358 22.567 2.838 46.444-1.542 70.966-3.509 19.646 1.339 41.586 13.304 60.192 7.536 11.723 17.511 21.544 28.842 28.403 10.785 6.529 20.141 14.521 27.804 23.755 13.269 15.99 33.848 34.624 57.703 34.621.958 0 1.927-.03 2.896-.092a89.277 89.277 0 0 0 13.081-1.809c22.191-4.776 45.76-5.21 70.057-1.289a258.497 258.497 0 0 0 41.041 3.278c139.293 0 253.802-112.293 255.985-251.91a241.849 241.849 0 0 0-4.94-52.551zm-17.318 52.205c-1.992 127.48-106.537 229.997-233.731 229.997a236.186 236.186 0 0 1-37.492-2.995c-12.124-1.957-24.105-2.934-35.883-2.934-14.489 0-28.664 1.48-42.405 4.438a66.88 66.88 0 0 1-9.809 1.353c-12.142.781-27.426-8.9-42.053-26.528-9.253-11.149-20.492-20.766-33.408-28.583-8.447-5.112-15.931-12.512-21.646-21.398-8.961-13.935-12.648-30.058-10.115-44.238 4.805-26.901 5.359-53.196 1.646-78.155a236.388 236.388 0 0 1-2.541-31.939c-.704-60.917 24.529-121.788 69.227-167.006 43.636-44.144 102.095-69.462 160.384-69.462 21.357 0 42.881 3.16 63.976 9.392 20.412 6.032 40.419 8.309 59.469 6.765a73.5 73.5 0 0 1 5.889-.237c25.381 0 48.752 13.283 60.995 34.665 9.505 16.603 20.514 32.292 32.716 46.631 5.006 5.882 7.764 13.839 7.764 22.403 0 1.406-.077 2.823-.229 4.21-2.497 22.737-1.566 44.914 2.765 65.913a219.77 219.77 0 0 1 4.481 47.708z" />
                <path
                    transform-origin="center"
                    transform={"rotate(" + obstacle.rotation + ")"}
                    d="M126.453 348.636c8.176-11.409 12.679-26.387 12.679-42.176 0-15.789-4.502-30.767-12.679-42.176-8.85-12.348-21.471-19.431-34.626-19.431s-25.776 7.082-34.626 19.431c-8.176 11.409-12.679 26.387-12.679 42.176 0 15.79 4.502 30.768 12.679 42.176 8.85 12.348 21.471 19.431 34.626 19.431s25.775-7.083 34.626-19.431zm-34.627-2.831c-13.575 0-25.044-18.018-25.044-39.345s11.469-39.345 25.044-39.345 25.044 18.017 25.044 39.345c-.001 21.328-11.469 39.345-25.044 39.345zm44.892 28.534c-23.197 0-41.368 14.178-41.368 32.278s18.171 32.278 41.368 32.278 41.369-14.178 41.369-32.278-18.172-32.278-41.369-32.278zm0 42.296c-11.664 0-19.107-5.934-19.107-10.017 0-4.084 7.444-10.017 19.107-10.017 11.664 0 19.108 5.934 19.108 10.017 0 4.083-7.443 10.017-19.108 10.017zm286.24-216.302c-24.549 0-44.522 24.966-44.522 55.653s19.973 55.653 44.522 55.653 44.522-24.966 44.522-55.653-19.972-55.653-44.522-55.653zm0 89.043c-12.067 0-22.261-15.291-22.261-33.392 0-18.1 10.194-33.392 22.261-33.392 12.067 0 22.261 15.291 22.261 33.392 0 18.1-10.194 33.392-22.261 33.392z" />
            </svg>
        );
    }
                 
    renderRockets(rocket) {
        return <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 491.52 491.52"
            width={ROCKET_DIM} height={ROCKET_DIM}
            x={rocket.pos.x} y={rocket.pos.y}>
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#e56353"
                opacity={rocket.isBoostersOn && !rocket.isLanded && !rocket.isCrashed ? "1" : "0"}
                d="M242.892 473.265s-43.658-58.87-14.398-86.965l-10.28.139c-6.952 7.705-29.146 40.65 25.088 104.814v.268c.038-.046.071-.09.11-.133.038.043.073.088.11.133v-.268c56.006-66.262 30.512-99.228 24.463-105.486l-11.106.15c4.946 5.106 30.305 35.671-13.987 87.348z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#fcd462"
                opacity={rocket.isBoostersOn && !rocket.isLanded && !rocket.isCrashed ? "1" : "0"}
                d="m244.052 398.543-.001-.057c-2.003-3.343-3.858-7.515-5.537-12.322l-10.02.136c-29.26 28.095 14.398 86.965 14.398 86.965 44.292-51.677 18.933-82.242 13.988-87.349l-6.851.093c-1.652 5.207-3.527 9.678-5.593 13.201-.128-.21-.251-.45-.384-.667z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#e56353"
                d="m250.029 386.009 6.851-.093 11.106-.15 12.688-.171-.187-13.394c-8.533-1.87-17.351-2.951-26.349-3.333-1.122 6.331-2.507 12.088-4.109 17.141zm-11.516.155c-1.739-4.976-3.281-10.655-4.578-16.913-9.507.843-18.714 2.641-27.621 5.124l.169 12.221 11.73-.158 10.28-.139 10.02-.135z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#64798a"
                d="M116.214 388.56a124.824 124.824 0 0 0 9.513 46.139c12.107-31.697 36.759-57.379 68.055-71.281-10.737-23.555-19.1-50.288-24.288-79.334-32.752 23.496-53.876 61.613-53.28 104.476zm257.743-19.427c.183 1.294.417 2.572.561 3.879-.144-1.308-.377-2.583-.561-3.879zm-2.365-12.283c.358 1.456.718 2.91 1.025 4.385-.307-1.476-.667-2.928-1.025-4.385zm-3.374-11.427zm-4.329-10.811c.592 1.287 1.105 2.614 1.654 3.925-.548-1.31-1.062-2.637-1.654-3.925zm-2.74 84.668c-.441-.806-.876-1.612-1.334-2.408.457.796.895 1.603 1.334 2.408zm-41.344-136.736c-.225-.156-.441-.324-.668-.477l-.002.014c.225.152.446.309.67.463zm12.571 101.172c-.273-.236-.554-.46-.829-.693.275.233.556.457.829.693zm10.151 9.74c.309.332.601.681.907 1.016-.307-.336-.597-.683-.907-1.016zm-35.272-26.696-.328-.168.328.168zm45.326 38.876c-.259-.357-.542-.693-.805-1.048.262.354.547.692.805 1.048zM325.47 286.587c1.332 1.023 2.61 2.107 3.899 3.18-1.29-1.074-2.565-2.157-3.899-3.18zm8.789 7.426zm15.871 17.592c.831 1.111 1.708 2.185 2.503 3.323-.796-1.139-1.672-2.212-2.503-3.323zm-7.694-9.336c1.09 1.203 2.188 2.4 3.232 3.642-1.044-1.244-2.14-2.438-3.232-3.642zm16.21 22.089c.45.784.824 1.611 1.257 2.405-.433-.795-.806-1.622-1.257-2.405z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#64798a"
                d="M307.255 366.76a130.02 130.02 0 0 1 24.292 16.264c.275.232.556.457.829.693a129.51 129.51 0 0 1 10.151 9.74c.31.332.6.68.907 1.016a128.17 128.17 0 0 1 8.342 10.115c.263.356.546.692.805 1.048 2.615 3.601 5.005 7.367 7.234 11.235.458.796.893 1.602 1.334 2.408 2.161 3.951 4.187 7.986 5.921 12.175a124.701 124.701 0 0 0 8.235-46.375c-.056-4.078-.351-8.095-.788-12.067-.144-1.307-.378-2.585-.561-3.879-.377-2.658-.799-5.298-1.34-7.898-.307-1.475-.667-2.929-1.025-4.385a124.924 124.924 0 0 0-1.957-7.075 122.017 122.017 0 0 0-1.417-4.351c-.818-2.333-1.726-4.617-2.675-6.886-.549-1.311-1.062-2.638-1.654-3.925-1.228-2.675-2.579-5.279-3.986-7.85-.433-.794-.807-1.621-1.257-2.405a127.072 127.072 0 0 0-6.013-9.43c-.795-1.138-1.672-2.212-2.503-3.323-1.447-1.933-2.909-3.848-4.461-5.694-1.045-1.242-2.142-2.439-3.232-3.642a130.727 130.727 0 0 0-4.52-4.752 128.683 128.683 0 0 0-3.657-3.504 130.049 130.049 0 0 0-4.889-4.247c-1.29-1.072-2.568-2.156-3.899-3.18-1.839-1.412-3.749-2.73-5.665-4.043-.224-.154-.445-.31-.669-.463-4.387 29.241-12.029 56.243-22.137 80.117 3.356 1.382 6.72 2.749 9.928 4.394l.327.169z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#ebf0f3"
                d="M251.066 9.897c2.369 2.39 4.722 4.818 7.004 7.418-2.283-2.597-4.634-5.031-7.004-7.418zm8.358 9.06c2.364 2.761 4.703 5.579 6.966 8.56-2.264-2.976-4.599-5.802-6.966-8.56zm7.757 9.658zM239.089 1.231v-.005c-23.595 21.188-43.143 53.006-56.478 91.645 13.333-38.632 32.886-70.453 56.478-91.64zm61.636 90.113.008.016c-7.275-19.343-16.074-36.909-26.138-52.202 10.047 15.302 18.86 32.856 26.13 52.186zm-51.337-83.21A148.316 148.316 0 0 0 240.379 0l-.015.013.011-.009a145.202 145.202 0 0 1 9.013 8.13zm69.748 273.947.002-.014c3.106-20.701 4.617-42.474 4.304-64.939-.572-41.162-7.209-79.833-18.414-113.718-58.519-7.818-125.961.583-125.961.583l3.471-10.902c-12.727 36.967-19.798 80.1-19.156 126.18.313 22.471 2.431 44.199 6.113 64.813 5.188 29.046 13.552 55.78 24.288 79.334 1.981 4.346 3.976 8.677 6.119 12.791 2.103-.685 4.269-1.235 6.413-1.833 8.906-2.484 18.114-4.282 27.621-5.124-2.613-12.609-4.24-27.5-4.461-43.524-.443-31.644 4.681-59.112 12.545-73.115l-.001-.065c.129-.207.248-.458.369-.673 8.455 13.557 14.516 41.323 14.963 73.481.223 15.955-.972 30.853-3.214 43.511 8.998.383 17.816 1.464 26.349 3.333 3.66.801 7.274 1.727 10.831 2.781 2-4.118 3.846-8.447 5.683-12.784 10.107-23.873 17.749-50.875 22.136-80.116z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#fcd462"
                d="M305.028 103.41c.396.051-.396-.055 0 0l-4.295-12.049-.007-.016h-.001a908.935 908.935 0 0 0-28.471-1.032c-5.63-.115-11.362-.071-17.06-.083-4.525-.008-8.993-.106-13.559-.045a907.989 907.989 0 0 0-59.04 2.742h-.004l-.053.164-3.471 10.902c-.001-.001 67.442-8.401 125.961-.583z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#3a556a"
                d="M238.513 386.164c1.679 4.807 3.535 8.979 5.537 12.322l.001.057c.133.217.256.457.384.667 2.066-3.524 3.941-7.995 5.593-13.201 1.602-5.053 2.987-10.81 4.108-17.142 2.241-12.658 3.436-27.556 3.214-43.511-.447-32.158-6.508-59.924-14.963-73.481-.122.215-.241.466-.369.673l.001.065c-7.864 14.003-12.988 41.471-12.545 73.115.221 16.024 1.848 30.915 4.461 43.524 1.298 6.257 2.839 11.936 4.578 16.912z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#e56353"
                d="M241.634 90.184c4.566-.062 9.034.037 13.559.045 5.698.012 11.43-.032 17.06.083 9.594.201 19.094.542 28.471 1.032h.001c-7.271-19.33-16.083-36.884-26.131-52.186-.103-.155-.199-.324-.303-.481a208.651 208.651 0 0 0-7.111-10.062c-.268-.357-.521-.744-.79-1.098-2.263-2.98-4.602-5.799-6.966-8.56-.458-.534-.894-1.117-1.355-1.643-2.282-2.601-4.635-5.029-7.004-7.418-.567-.571-1.107-1.204-1.678-1.762A147.358 147.358 0 0 0 240.378 0l-.015.013c-.43.377-.85.786-1.277 1.169l.003.044v.004c-23.592 21.187-43.145 53.008-56.478 91.641a1.078 1.078 0 0 0-.021.055h.004a907.989 907.989 0 0 1 59.04-2.742z" />
            <path transform-origin="center"
                transform={"rotate(" + rocket.rotation + ")"}
                fill="#fcd462"
                d="M278.292 173.549c-.265-18.956-16.183-34.375-35.479-34.375l-.495.004c-9.468.123-18.33 3.871-24.95 10.551-6.619 6.68-10.195 15.478-10.065 24.775.267 18.957 16.189 34.382 35.49 34.384l.493-.004c19.569-.264 35.276-16.116 35.006-35.335zm-35.124 26.867c-14.822.2-27.038-11.466-27.244-26.027-.203-14.549 11.689-26.551 26.509-26.745 14.813-.202 27.034 11.477 27.237 26.023.205 14.558-11.687 26.552-26.502 26.749z" />
            <ellipse transform-origin="center" transform={"rotate(" + rocket.rotation + ")"} fill="#3a556a" cx="242.791" cy="174.026" rx="26.388" ry="26.875" />
        </svg>;
    }

    renderLanding() {
        let x = this.state.finish.x;
        let y = this.state.finish.y;
        let r = this.state.finish.radius;
        return (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512.008 512.008"
                width={r * 2} height={r * 2} x={x - r} y={y - r}>
                <path fill="#5d9cec" d="M512.004 256.004c0 141.377-114.61 256.004-255.996 256.004C114.623 512.008.004 397.381.004 256.004.004 114.619 114.623 0 256.008 0c141.386 0 255.996 114.619 255.996 256.004z" />
                <path fill="#a0d468" d="M499.457 176.605c-12.016-36.845-32.703-71.087-59.86-99.025-27.125-27.891-60.72-49.54-97.142-62.61l-10.641-3.82-3.188 10.859c-1.469 4.954-2.578 8.532-3.345 10.688-9.5 4.453-19.656 8.469-29.484 12.375-31.358 12.421-63.773 25.273-86.133 54.742-9.728 12.813-10.853 26.196-2.93 34.915 4.148 4.57 10.188 6.891 17.953 6.891 5.062 0 10.344-.953 15-1.789 3.281-.594 6.672-1.203 8.664-1.203.148 0 .281.008.414.016 11.461.82 32.813 4.875 51.938 9.859 21.016 5.469 32.157 10.094 36.907 12.79-3.188 3.797-11.734 9.665-23.173 9.665-5.594 0-11.031-1.445-16.188-4.29-7.891-4.352-27.641-8.484-54.86-13.344l-2.641-.477c-1.141-.203-2.445-.305-3.977-.305-11.438 0-38.415 5.539-58.61 26.516-17.664 18.336-26.023 43.61-24.844 75.11.727 19.367 7.297 35.805 19.008 47.523 11.883 11.907 28.438 18.298 47.868 18.532 2.312.016 4.633.016 6.938.016h1.547c11.227 0 22.828 0 31.406 3.234 5.493 2.062 12.259 6.125 15.915 19.313 3.781 13.719 4.875 27.75 6 42.609 1.062 13.984 2.188 28.453 5.75 42.828 7.062 28.47 21.609 35.579 32.562 36.533 1.562.125 3.125.188 4.656.188 24.376 0 40.563-16.407 53.798-31.798 3.156-3.673 6.609-7.22 10.266-10.97 8.063-8.266 16.407-16.812 22.345-27.672 6.859-12.5 9.312-25.625 11.719-38.297 2.25-12.031 4.406-23.392 10.125-33.329.781-1.344 1.688-2.875 2.688-4.609 29.048-49.806 36.032-68.243 29.892-78.938-2.766-4.797-7.828-7.391-13.735-6.938-2.812.219-5.594.328-8.25.328-17.5 0-31.969-4.813-39.703-13.204-2.188-2.375-3.234-4.422-3.703-5.782.266-.016.562-.023.906-.023 5.125 0 13 2.102 20.609 4.141 9.203 2.469 18.734 5.016 27.109 5.016 13.642 0 22.517-7.086 24.47-19.493 1.938-3.516 11.031-12.086 17.188-12.891l12.75-1.664-3.984-12.216zM82.154 305.88c-8.017-11.657-17.196-22.938-25.438-34.415-7.68-10.703-37.656-59.376-51.548-66.86a257.316 257.316 0 0 0-5.164 51.399c0 62.313 22.267 119.408 59.267 163.814.031.031.086.047.164.047 2.242 0 23.095-15.5 24.985-17.109 8.211-6.969 15.086-15.484 18.164-25.969 7.18-24.406-6.93-51.282-20.43-70.907z" />
            </svg>
        );
    }
}

function randomAsteroidColour() {
    let r = Math.floor(randomNumber(200, 70)).toString(16).padStart(2, "0");
    let g = Math.floor(randomNumber(120, 25)).toString(16).padStart(2, "0");
    let b = Math.floor(randomNumber(45, 20)).toString(16).padStart(2, "0");
    return "#" + r + g + b;
}

export function randomNumber(max, min) {
    if (!min) min = 0;
    return Math.random() * (max - min) + min;
}